# Stage 1: Build
    FROM node:20-slim AS build
    WORKDIR /app
    ENV YARN_IGNORE_PATH=1 YARN_ENABLE_GLOBAL_CACHE=false YARN_CACHE_FOLDER=/tmp/.yarn-cache
    RUN apt-get update && apt-get install -y --no-install-recommends git curl \
        && rm -rf /var/lib/apt/lists/* \
        && corepack enable && corepack prepare yarn@4.9.1 --activate  
    COPY app/ ./
    COPY .git /app/.git
    RUN yarn install --immutable
    
    # Pre-build to warm up caches and avoid runtime overhead
    RUN NODE_OPTIONS="--max-old-space-size=4096" yarn affine build -p web --deps
    
    # Stage 2: Runtime
    FROM node:20-slim AS runtime
    WORKDIR /app
    # Create a non-root user
    RUN useradd -m -u 10001 appuser
    COPY --from=build /app ./
    RUN chown -R appuser:appuser /app
    USER 10001
    ENV NODE_ENV=production \
        PORT=8080 \
        NODE_OPTIONS="--max-old-space-size=4096"
    EXPOSE 8080 
    HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
      CMD node -e "http=require('http');r=http.request({host:'127.0.0.1',port:process.env.PORT||8080,path:'/'},res=>process.exit(res.statusCode>=200&&res.statusCode<400?0:1));r.on('error',()=>process.exit(1));r.end()"
    CMD ["bash", "-lc", "yarn affine web dev"]
    